Data Types -> Scalar data types and Composite Data types and Reference Types

Scalar Data Types: Can be used to store only one value in one variable
NUMBER, PLS_INTEGER, BINARY_FLOAT,BINARY_DOUBLE
CHAR, VARCHAR2, NCHAR, NVARCHAR2
RAW
BOOLEAN
BLOB, CLOB, NCLOB
DATE, TIMESTAMP

Composite Datatypes:
1.Record : Hold one row of data eg: one row of employee can be stored in a variable.
Can be defined using Type keyword and %rowtype.The type mentioned here refers to the TYPE definition.
The internal components can have different data type, and are called elements.
Each field of a record variable can be accessed by its name with the syntax variable_name.field_name.

Example of record with select, insert and update statement usage
--create table emp_bkp as select * from emp where 1=2;
declare
v_emp_rec emp%rowtype;
begin
select * 
into v_emp_rec
from emp 
where empno =5;
-- using insert statement with record
--insert into emp_bkp values v_emp_rec;
-- using update statement with record
--v_emp_rec.sal =V_emp_rec.sal+100;
--v_emp_rec.deptno ='50';
-- update emp set row =v_emp_rec where empno =5;
dbms_output.put_line('emp name='||v_emp_rec.ename);
dbms_output.put_line('salary='||v_emp_rec.sal);
end;

Example of record created from cursor
declare 
cursor c1 is select empno,ename,job from emp;
lv_emp_rec c1% rowtype;
BEGIN
open c1;
fetch c1 into lv_emp_rec;
close c1;
dbms_output.put_line('empno='||lv_emp_rec.empno);
dbms_output.put_line('name='||lv_emp_rec.ename);
dbms_output.put_line('job='||lv_emp_rec.job);
end;

2.Collection : A collection is an ordered group of logically related elements. 
Has three types of collection : Varrray, Nested Table, Associative array.
The internal components always have the same data type, and are called fields. 
Each element of a collection variable can be accessed by its unique index  with the syntax variable_name(index) .
Can be defined using Type keyword to create a collection type and create a variable of that collection type and or %type.





